`#!/usr/bin/env node`
/*
** Copyright (c) 2011 Christphe Eymard, FÃ©lix Delval
**
** Permission is hereby granted, free of charge, to any person obtaining a copy
** of this software and associated documentation files (the "Software"), to deal
** in the Software without restriction, including without limitation the rights
** to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
** copies of the Software, and to permit persons to whom the Software is furnished
** to do so, subject to the following conditions:
**
** The above copyright notice and this permission notice shall be included in all
** copies or substantial portions of the Software.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
** THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
** LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
** OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN 
** THE SOFTWARE.
*/

path = require 'path'
fs = require 'fs'
sys = require 'sys'
exec = require('child_process').exec
child_process = require 'child_process'
console = require 'console'
util = require 'util'
http = require 'http'
optimist = require 'optimist'
jinjs = require 'jinjs' 


jinjs.registerExtension '.tpl'
nginx_conf = require './templates/nginx.conf'

argv = optimist
    .usage 'sng [basedir]'
    .default do
        n: '127.0.0.1:8000', 
        p: '127.0.0.1:9000'
    .alias do
        n: 'nginx-base', 
        p: 'php-bind',
        h: 'help',
    .describe do
        n: 'Default binding NGinx wil be listening on',
        p: 'Default binding address for php-cgi'
    .argv


if optimist.argv.h
    optimist.showHelp()
    process.exit()
   

sngjs =
    prefix_dir: 'nginx-'
    php_bind: argv.p
    nginx_bind: argv.n
    kill: 0
    fresh: true


if optimist.argv._.length > 0 
    sngjs.base = path.join process.cwd(), optimist.argv._[0]
else
    sngjs.base = process.cwd()


colors =
    chead: '\033[96;1m'
    cblue: '\033[94;1m'
    cgreen: '\033[92;1m'
    cred: '\033[91;1m'
    cyellow: '\033[93;1m'
    cfail: '\033[91m'
    cend: '\033[0m'


logme = (data, arrow=true) ->
    if arrow
        console.log '  ' + colors.cgreen + '==>' + colors.cend + ' '+ data
    else
        console.log '   ' + data

emphasize = (data) ->
    return colors.chead + data + colors.cend

(err, stdout, stderr) <- exec 'mktemp -d /tmp/' + sngjs.prefix_dir + 'XXXXXXX'

if (err !== null) 
    console.log('exec error:' + err)
    process.exit()else 

sngjs.tmpdir = stdout.substr 0, stdout.length - 1
sngjs.access_log = sngjs.tmpdir + '/access.log'
sngjs.error_log = sngjs.tmpdir + '/error.log'

logme 'NGinx temporary directory is ' + emphasize(sngjs.tmpdir) 

sngjs.nginx_conf = nginx_conf.render sngjs

sngjs.conffilename =  path.join sngjs.tmpdir,'nginx.conf'
fs.writeFileSync sngjs.conffilename, sngjs.nginx_conf
fs.writeFileSync sngjs.access_log, ''
fs.writeFileSync sngjs.error_log, ''

print_stdout = (data) ->
    sys.print data.toString()    

print_stderr = (data) ->
    str = data.toString()
    if sngjs.fresh
        sngjs.fresh = false
    else
        sys.print colors.cred + data.toString() + colors.cend

print_accesslog = (data) -> 
    mdata = data.toString()
    line = mdata.split '||' 
    request = line[0].split ' '
    mode = request[0]
    url = request[1]
    proto = request[2]
    status =  line[1]
    length = line[2]
    time = line[3]
    fro = line[4]
    bytes_sent = parseInt(line[5]) / 1024

    if parseInt(status) >= 400 
        status = colors.cred + status + colors.cend
    else 
        status = colors.cgreen + status + colors.cend
    
    console.log colors.cblue + mode + colors.cend + ' ' + colors.cyellow + url + colors.cend + ' ' + status + ' (' + colors.chead + fro + colors.cend + ') ' + colors.cblue + bytes_sent + colors.cend + 'Kb, ' + colors.cblue + time + colors.cend + 's'

killed = ->
    sngjs.kill += 1
    if sngjs.kill >= 2
        child_process.exec 'rm -r ' + sngjs.tmpdir, -> 
            process.exit()


logme 'Starting PHP CGI on ' + emphasize(sngjs.php_bind)

sngjs.php = child_process.spawn 'php-cgi', ['-b',sngjs.php_bind,'-q']
sngjs.php.stdout.on 'data', print_stdout
sngjs.php.stderr.on 'data', print_stderr
sngjs.php.on 'exit', killed


logme "Starting NGinx CGI on " + emphasize(sngjs.nginx_bind)

sngjs.nginx = child_process.spawn 'nginx', ['-c',sngjs.conffilename]
sngjs.nginx.stdout.on 'data', print_stdout
sngjs.nginx.stderr.on 'data', print_stderr
sngjs.nginx.on 'exit', killed

sngjs.tail = child_process.spawn 'tail', ['-f',sngjs.access_log]
sngjs.tail.stdout.on 'data', print_accesslog
sngjs.tail.on 'exit', killed

sngjs.err = child_process.spawn 'tail', ['-f', sngjs.error_log]
sngjs.err.stdout.on 'data', print_stderr
sngjs.err.on 'exit', killed


process.stdin.resume()

process.on 'SIGINT', ->
    console.log 'Interrupted'
    sngjs.tail.kill('SIGINT')
    sngjs.nginx.kill('SIGINT')
    sngjs.php.kill('SIGINT')
    sngjs.err.kill('SIGINT')

